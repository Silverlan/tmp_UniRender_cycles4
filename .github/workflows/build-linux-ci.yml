name: Build Linux
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
  schedule:
    - cron: '0 0 * * *'
    
concurrency:
  group: environment-lin-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  # See https://github.com/git-lfs/git-lfs/issues/5749
  GIT_CLONE_PROTECTION_ACTIVE: 'false'

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-24.04
            name: "Ubuntu 24.04"
    steps:
      - name: Setup Pragma
        uses: Silverlan/pragma/github_actions/setup@main
        with:
          branch: 'feat/prebuilt_binaries'
        
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build Dependencies
        uses: Silverlan/pragma/github_actions/build@main
        id: build-deps
        with:
          # This will build the core dependencies, as well as cycles, but not Pragma
          build-args: "--with-essential-client-modules=0 --with-common-modules=0 --with-lua-debugger=0 --module pr_unirender:\"https://github.com/Silverlan/pr_cycles.git\" --build 0 --build-cycles"

      - name: Build UniRender_cycles
        shell: bash
        run: |
          root="$PWD"
          cd "${{ steps.build-deps.outputs.build-dir }}"
          cmake --build "." --config "RelWithDebInfo" --target UniRender_cycles
          
          cd $root
          mkdir -p release
          cp -a "${{ steps.build-deps.outputs.deps-dir }}/staging/cycles/." release/

      - name: Release Binaries
        uses: Silverlan/common_actions/release_nightly_binaries@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.ref_name }}
